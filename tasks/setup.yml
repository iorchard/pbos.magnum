---
- name: Setup | copy static configuration files
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    src: "{{ ansible_os_family | lower }}{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ static_conf }}"
  become: true

- name: Setup | create systemd drop-in replacement directory
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ item }}.d"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"
  become: true
  loop: "{{ os_systemd_service_name }}"

- name: Setup | create systemd drop-in replacement files for KillMode=mixed
  ansible.builtin.copy:
    dest: "/etc/systemd/system/{{ item }}.d/killmode.conf"
    content: |
      [Service]
      KillMode=mixed
    owner: "root"
    group: "root"
    mode: "0644"
  loop: "{{ os_systemd_service_name }}"
  become: true
  notify:
    - systemctl restart service

- name: Setup | reload systemd
  ansible.builtin.command: >-
    systemctl daemon-reload
  become: true

- name: Setup | template configuration
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ ansible_os_family | lower }}{{ item.dest + '.j2' }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ os_service_conf }}"
  become: true
  changed_when: true
  notify:
    - systemctl restart service

- name: Setup | create db tables
  ansible.builtin.shell: su -s /bin/sh -c "magnum-db-manage upgrade" magnum
  become: true
  delegate_to: "{{ groups['magnum'][0] }}"
  run_once: true
...
